import matplotlib.pyplot as plt
import numpy as np
import scipy.misc as sm
import ruamel_yaml
from inspect_images import draw_float_bounding_box

%load_ext autoreload
%autoreload 2

from data_feeder import *

from simple_nn import SimpleNet

config = ruamel_yaml.load(open("./simple_net_config.yaml"))
network_config = NetworkConfig(**config["SimpleNetConfig"])
env_config = EnvConfig(**config["EnvConfig"])

simple_net = SimpleNet(network_config, env_config)

image_iter = imageLabelIterator(env_config.sample_dir)
s = SlidingWindowSampleCreator(network_config.slide_x, network_config.slide_y, network_config.window_width,
                               network_config.window_height, normalize_label=True,
                               yes_label_weight=network_config.yes_label_weight,
                               no_label_weight=network_config.no_label_weight)

sliding_window_iter = s.create_sliding_window_from_iter(image_iter)

loss, image, orig_label, output, gradients = simple_net.train(sliding_window_iter, is_training=False)

def plot_result(i : int):
    draw_float_bounding_box(np.squeeze(image[i]), [orig_label[i][:4].reshape([2, 2])], [output[i][:4].reshape([2,2])])